{"ast":null,"code":"var _jsxFileName = \"/Users/Henry/Dropbox/WebDev/currency-converter-heroku/src/ExchangeRates.js\";\nimport React, { set } from 'react';\nimport DropdownMenu from './DropdownMenu';\nimport { json, checkStatus } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExchangeRates extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.chooseCurrency = currency => {\n      this.setState({\n        chosenCurrency: currency\n      });\n    };\n\n    this.state = {\n      results: [],\n      error: '',\n      chosenCurrency: 'USD'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let {\n      chosenCurrency\n    } = this.state;\n    ;\n    fetch(`https://api.frankfurter.app/latest?from=${chosenCurrency}`).then(checkStatus).then(json).then(data => {\n      if (!data) {\n        throw new Error(data.Error);\n      }\n\n      if (data) {\n        console.log(data);\n        this.setState({\n          results: data.rates,\n          error: ''\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        error: error.message\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      results,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleChange,\n            className: \"form-inline my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-danger\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              passCurrency: this.chooseCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Rate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: (() => {\n                  if (error) {\n                    return error;\n                  }\n\n                  return Object.keys(results).map(key => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: key\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: results[key]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 71,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 23\n                    }, this);\n                  });\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ExchangeRates;","map":{"version":3,"sources":["/Users/Henry/Dropbox/WebDev/currency-converter-heroku/src/ExchangeRates.js"],"names":["React","set","DropdownMenu","json","checkStatus","ExchangeRates","Component","constructor","props","chooseCurrency","currency","setState","chosenCurrency","state","results","error","handleChange","bind","event","preventDefault","fetch","then","data","Error","console","log","rates","catch","message","render","Object","keys","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,GAAf,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,SAAlC;;;AAGA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,cAXmB,GAWDC,QAAD,IAAc;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEF;AAAlB,OAAd;AACD,KAbkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXH,MAAAA,cAAc,EAAE;AAHL,KAAb;AAMA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAMDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAI;AAAEP,MAAAA;AAAF,QAAqB,KAAKC,KAA9B;AAAoC;AACpCO,IAAAA,KAAK,CAAE,2CAA0CR,cAAe,EAA3D,CAAL,CACGS,IADH,CACQjB,WADR,EAEGiB,IAFH,CAEQlB,IAFR,EAGGkB,IAHH,CAGSC,IAAD,IAAU;AACd,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAIC,KAAJ,CAAUD,IAAI,CAACC,KAAf,CAAN;AACD;;AACD,UAAID,IAAJ,EAAU;AACRE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAKX,QAAL,CAAc;AAAEG,UAAAA,OAAO,EAAEQ,IAAI,CAACI,KAAhB;AAAuBX,UAAAA,KAAK,EAAE;AAA9B,SAAd;AACD;AACF,KAXH,EAYGY,KAZH,CAYUZ,KAAD,IAAW;AAChB,WAAKJ,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAAEA,KAAK,CAACa;AAAf,OAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,KAfH;AAgBD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqB,KAAKF,KAAhC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAM,YAAA,QAAQ,EAAE,KAAKG,YAArB;AAAmC,YAAA,SAAS,EAAC,kBAA7C;AAAA,oCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AAAc,cAAA,YAAY,EAAE,KAAKP;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACE;AAAO,cAAA,SAAS,EAAC,OAAjB;AAAA,sCACE;AAAA,uCACE;AAAA,0CACE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAA,0BACH,CAAC,MAAM;AACN,sBAAIM,KAAJ,EAAW;AACT,2BAAOA,KAAP;AACD;;AACD,yBAAOe,MAAM,CAACC,IAAP,CAAYjB,OAAZ,EAAqBkB,GAArB,CAA0BC,GAAD,IAAS;AACvC,wCACM;AAAA,8CACE;AAAA,kCAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAA,kCAAKnB,OAAO,CAACmB,GAAD;AAAZ;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,4BADN;AAMD,mBAPM,CAAP;AAQD,iBAZA;AADG;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AA7EyC;;AAgF5C,eAAe5B,aAAf","sourcesContent":["import React, {set} from 'react';\nimport DropdownMenu from './DropdownMenu';\nimport { json, checkStatus } from './utils';\n\n\nclass ExchangeRates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      error: '',\n      chosenCurrency: 'USD',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  chooseCurrency = (currency) => {\n    this.setState({ chosenCurrency: currency});\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let { chosenCurrency } = this.state;;\n    fetch(`https://api.frankfurter.app/latest?from=${chosenCurrency}`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (!data) {\n          throw new Error(data.Error);\n        }\n        if (data) {\n          console.log(data);\n          this.setState({ results: data.rates, error: ''});\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n  }\n\n  render() {\n    const { results, error } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <form onSubmit={this.handleChange} className=\"form-inline my-4\">\n              <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n              <DropdownMenu passCurrency={this.chooseCurrency} />\n            </form>\n            <div className=\"table-responsive-sm\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Currency</th>\n                    <th scope=\"col\">Rate</th>\n                  </tr>\n                </thead>\n                <tbody>\n            {(() => {\n              if (error) {\n                return error;\n              }\n              return Object.keys(results).map((key) => {\n                return (\n                      <tr>\n                        <td>{key}</td>\n                        <td>{results[key]}</td>\n                      </tr>\n                );\n              })\n            })()}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ExchangeRates;"]},"metadata":{},"sourceType":"module"}