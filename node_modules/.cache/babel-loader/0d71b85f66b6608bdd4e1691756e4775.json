{"ast":null,"code":"var _jsxFileName = \"/Users/Henry/Dropbox/WebDev/currency-converter-heroku/src/CurrencyConverter.js\";\nimport React from 'react';\nimport { json, checkStatus } from './utils';\nimport DropdownMenu from './DropdownMenu';\nimport './CurrencyConverter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.convertCurrencyTo = currency => {\n      let {\n        convertTo\n      } = this.state;\n      this.setState({\n        convertTo: currency\n      });\n      console.log(convertTo);\n    };\n\n    this.chooseCurrency = currency => {\n      let {\n        chosenCurrency\n      } = this.state;\n      this.setState({\n        chosenCurrency: currency\n      });\n      console.log(chosenCurrency);\n    };\n\n    this.state = {\n      results: [],\n      error: '',\n      chosenCurrency: 'USD',\n      convertTo: 'USD'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {\n      chosenCurrency\n    } = this.state;\n    ;\n    fetch(`https://api.frankfurter.app/latest?from=${chosenCurrency}`).then(checkStatus).then(json).then(data => {\n      if (!data) {\n        throw new Error(data.Error);\n      }\n\n      if (data) {\n        console.log(data.rates);\n        this.setState({\n          results: data.rates,\n          error: ''\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        error: error.message\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Exchange Rate Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-inline my-4\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {\n              passCurrency: this.chooseCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"custom-form1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {\n              passCurrency: this.convertCurrencyTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"custom-form2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/Henry/Dropbox/WebDev/currency-converter-heroku/src/CurrencyConverter.js"],"names":["React","json","checkStatus","DropdownMenu","CurrencyConverter","Component","constructor","props","convertCurrencyTo","currency","convertTo","state","setState","console","log","chooseCurrency","chosenCurrency","results","error","handleSubmit","bind","event","preventDefault","fetch","then","data","Error","rates","catch","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { json, checkStatus } from './utils';\nimport DropdownMenu from './DropdownMenu';\nimport './CurrencyConverter.css';\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      error: '',\n      chosenCurrency: 'USD',\n      convertTo: 'USD'\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  convertCurrencyTo = (currency) => {\n    let {convertTo} = this.state;\n    this.setState({ convertTo: currency});\n    console.log(convertTo);\n  }\n\n  chooseCurrency = (currency) => {\n    let { chosenCurrency } = this.state;\n    this.setState({ chosenCurrency: currency});\n    console.log(chosenCurrency);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let { chosenCurrency } = this.state;;\n    fetch(`https://api.frankfurter.app/latest?from=${chosenCurrency}`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (!data) {\n          throw new Error(data.Error);\n        }\n        if (data) {\n          console.log(data.rates);\n          this.setState({ results: data.rates, error: ''});\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h2>Exchange Rate Converter</h2>\n          <form className=\"form-inline my-4\" onSubmit={this.handleSubmit}>\n          <div className=\"col-12 col-md-6\">\n              <DropdownMenu passCurrency={this.chooseCurrency} />\n              <input type=\"number\" className=\"form-control\" id=\"custom-form1\" />\n          </div>\n          <div className=\"col-12 col-md-6\">\n              <DropdownMenu passCurrency={this.convertCurrencyTo} />\n              <input type=\"number\" className=\"form-control\" id=\"custom-form2\" /> \n          </div>\n          <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}