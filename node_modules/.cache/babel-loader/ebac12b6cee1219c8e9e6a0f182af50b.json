{"ast":null,"code":"var _jsxFileName = \"/Users/Henry/Dropbox/WebDev/currency-converter-heroku/src/CurrencyConverter.js\";\nimport React from 'react';\nimport { json, checkStatus } from './utils';\nimport DropdownMenu from './DropdownMenu';\nimport './CurrencyConverter.css';\nimport { FaArrowsAltH } from 'react-icons/fa';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RatesChart = props => {\n  console.log('hello');\n};\n\n_c = RatesChart;\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getHistoricalRates = (chosenCurrency, convertTo) => {\n      const endDate = new Date().toISOString().split('T')[0];\n      const startDate = new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n      fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${chosenCurrency}&to=${convertTo}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[convertTo]);\n        const chartLabel = `${chosenCurrency}/${convertTo}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      }).catch(error => console.error(error.message));\n    };\n\n    this.buildChart = (labels, data, label) => {\n      const chartRef = this.chartRef.current.getContext(\"2d\");\n\n      if (typeof this.chart !== \"undefined\") {\n        this.chart.destroy();\n      }\n\n      this.chart = new Chart(chartRef, {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [{\n            label: label,\n            data,\n            fill: false,\n            tension: 0\n          }]\n        },\n        options: {\n          responsive: true\n        }\n      });\n    };\n\n    this.convertCurrencyTo = currency => {\n      this.setState({\n        convertTo: currency\n      });\n    };\n\n    this.chooseCurrency = currency => {\n      this.setState({\n        chosenCurrency: currency\n      });\n    };\n\n    this.state = {\n      results: [],\n      error: '',\n      chosenCurrency: 'USD',\n      convertTo: 'EUR',\n      amountToConvert: 1\n    };\n    this.chartRef = /*#__PURE__*/React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSwap = this.handleSwap.bind(this);\n    this.getHistoricalRates = this.getHistoricalRates(this);\n  }\n\n  componentDidMount() {\n    this.getHistoricalRates(chosenCurrency, convertTo);\n  }\n\n  handleSwap(event) {\n    event.preventDefault();\n    let {\n      chosenCurrency,\n      convertTo\n    } = this.state;\n    this.setState({\n      convertTo: chosenCurrency\n    });\n    this.setState({\n      chosenCurrency: convertTo\n    });\n    fetch(`https://api.frankfurter.app/latest?from=${convertTo}`).then(checkStatus).then(json).then(data => {\n      if (!data) {\n        throw new Error(data.Error);\n      }\n\n      if (data) {\n        console.log(data.rates);\n        this.setState({\n          results: data.rates,\n          error: ''\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        error: error.message\n      });\n      console.log(error);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      amountToConvert: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {\n      chosenCurrency\n    } = this.state;\n    fetch(`https://api.frankfurter.app/latest?from=${chosenCurrency}`).then(checkStatus).then(json).then(data => {\n      if (!data) {\n        throw new Error(data.Error);\n      }\n\n      if (data) {\n        console.log(data.rates);\n        this.setState({\n          results: data.rates,\n          error: ''\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        error: error.message\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      results,\n      error,\n      chosenCurrency,\n      convertTo,\n      amountToConvert\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline my-4\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Exchange Rate Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              value: chosenCurrency,\n              passCurrency: this.chooseCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"custom-form1\",\n              onChange: this.handleChange,\n              value: amountToConvert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-4 d-flex align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-secondary mt-5 swap\",\n              onClick: this.handleSwap,\n              children: /*#__PURE__*/_jsxDEV(FaArrowsAltH, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              value: convertTo,\n              passCurrency: this.convertCurrencyTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-2 pt-3 output\",\n              id: \"custom-form2\",\n              children: (() => {\n                if (error) {\n                  return error;\n                }\n\n                if (chosenCurrency === convertTo) {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: amountToConvert\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 28\n                  }, this);\n                } else {\n                  if (isNaN(results[convertTo])) {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 30\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (amountToConvert * results[convertTo]).toFixed(4)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 32\n                    }, this);\n                  }\n                }\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row my-4 row-adjust\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary btn-custom\",\n            children: \"Convert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: this.chartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"RatesChart\");","map":{"version":3,"sources":["/Users/Henry/Dropbox/WebDev/currency-converter-heroku/src/CurrencyConverter.js"],"names":["React","json","checkStatus","DropdownMenu","FaArrowsAltH","Chart","RatesChart","props","console","log","CurrencyConverter","Component","constructor","getHistoricalRates","chosenCurrency","convertTo","endDate","Date","toISOString","split","startDate","getTime","fetch","then","data","error","Error","chartLabels","Object","keys","rates","chartData","values","map","rate","chartLabel","buildChart","catch","message","labels","label","chartRef","current","getContext","chart","destroy","type","datasets","fill","tension","options","responsive","convertCurrencyTo","currency","setState","chooseCurrency","state","results","amountToConvert","createRef","handleSubmit","bind","handleChange","handleSwap","componentDidMount","event","preventDefault","target","value","render","isNaN","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { json, checkStatus } from './utils';\nimport DropdownMenu from './DropdownMenu';\nimport './CurrencyConverter.css';\nimport { FaArrowsAltH } from 'react-icons/fa';\nimport Chart from 'chart.js/auto';\n\nconst RatesChart = (props) => {\n  console.log('hello');\n};\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      error: '',\n      chosenCurrency: 'USD',\n      convertTo: 'EUR',\n      amountToConvert: 1,\n    };\n\n    this.chartRef = React.createRef();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSwap = this.handleSwap.bind(this);\n    this.getHistoricalRates = this.getHistoricalRates(this);\n  }\n\n  componentDidMount() {\n    this.getHistoricalRates(chosenCurrency, convertTo);\n  }\n\n  getHistoricalRates = (chosenCurrency, convertTo) => {\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date((new Date).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n    fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${chosenCurrency}&to=${convertTo}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[convertTo]);\n        const chartLabel = `${chosenCurrency}/${convertTo}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      })\n      .catch(error => console.error(error.message));\n  }\n    buildChart = (labels, data, label) => {\n      const chartRef = this.chartRef.current.getContext(\"2d\");\n      if (typeof this.chart !== \"undefined\") {\n        this.chart.destroy();\n      }\n      this.chart = new Chart(chartRef, {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: label,\n              data,\n              fill: false,\n              tension: 0,\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n        }\n      })\n    }\n\n  convertCurrencyTo = (currency) => {\n    this.setState({ convertTo: currency});\n  }\n\n  chooseCurrency = (currency) => {\n    this.setState({ chosenCurrency: currency});\n  }\n\n  handleSwap(event){\n    event.preventDefault();\n    let { chosenCurrency, convertTo } = this.state;\n    this.setState({convertTo: chosenCurrency});\n    this.setState({chosenCurrency: convertTo});\n    fetch(`https://api.frankfurter.app/latest?from=${convertTo}`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (!data) {\n          throw new Error(data.Error);\n        }\n        if (data) {\n          console.log(data.rates);\n          this.setState({ results: data.rates, error: ''});\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n  }\n\n  handleChange(event){\n    this.setState({ amountToConvert: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let { chosenCurrency } = this.state;\n    fetch(`https://api.frankfurter.app/latest?from=${chosenCurrency}`)\n      .then(checkStatus)\n      .then(json)\n      .then((data) => {\n        if (!data) {\n          throw new Error(data.Error);\n        }\n        if (data) {\n          console.log(data.rates);\n          this.setState({ results: data.rates, error: ''});\n        }\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n  }\n\n  render() {\n    const { results, error, chosenCurrency, convertTo, amountToConvert } = this.state;\n    return (\n      <div className=\"container\">\n        <form className=\"form-inline my-4\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <h2>Exchange Rate Converter</h2>\n            <div className=\"col-12 col-md-4\">\n                <h4>From</h4>\n                <DropdownMenu value={chosenCurrency} passCurrency={this.chooseCurrency} />\n                <input type=\"number\" className=\"form-control\" id=\"custom-form1\" onChange={this.handleChange} value={amountToConvert}/>\n            </div>\n            <div className=\"col-12 col-md-4 d-flex align-items-center justify-content-center\">\n              <button type=\"submit\" className=\"btn btn-secondary mt-5 swap\" onClick={this.handleSwap}>\n                <FaArrowsAltH />\n              </button>\n            </div>\n            <div className=\"col-12 col-md-4\">\n                <h4>To</h4>\n                <DropdownMenu value={convertTo} passCurrency={this.convertCurrencyTo} />\n                <div className=\"px-2 pt-3 output\" id=\"custom-form2\">\n                {(() => {\n                  if (error) {\n                    return error;\n                  } if(chosenCurrency === convertTo){\n                    return <p>{amountToConvert}</p>\n                  } else {\n                    if(isNaN(results[convertTo])){\n                      return <p></p>;\n                    } else {\n                        return <p>{(amountToConvert*results[convertTo]).toFixed(4)}</p>;\n                    }\n                  }\n                })()}  \n                </div> \n            </div>\n          </div>\n          <div className=\"row my-4 row-adjust\">\n            <button type=\"submit\" className=\"btn btn-secondary btn-custom\">Convert</button>\n          </div>\n          <div className=\"row\">\n            <canvas ref={this.chartRef} />\n          </div>\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}